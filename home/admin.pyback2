from django.core.mail import send_mail
from django.contrib import admin
from django.template.response import TemplateResponse
from django import forms
from django.http import HttpResponseRedirect
from django.urls import reverse
from django.contrib import messages
from .models import OnlineStudents, EmailTemplate

class EmailForm(forms.Form):
    email_template = forms.ModelChoiceField(queryset=EmailTemplate.objects.all(), label='Email Template')

def send_email_action(modeladmin, request, queryset):
    print("request.POST:", request.POST)  # Debugging statement to check the content of request.POST
    if request.POST.get('action') == 'send_email_action':
        form = EmailForm(request.POST)
        print("check if form is valid")
        if form.is_valid():
            print("form is valid!")
            selected_students = queryset
            email_template = form.cleaned_data['email_template']
            selected_emails = selected_students.values_list('email', flat=True)
            print("Selected email template:", email_template.subject)
            print("Selected emails:", selected_emails)
            for email in selected_emails:
                try:
                    # Send email using the selected template
                    send_mail(
                        subject=email_template.subject,
                        message=email_template.message,
                        from_email='inmotion@dtechnologys.com',
                        recipient_list=[email],
                        fail_silently=False,
                    )
                    print("Email sent to:", email)
                except Exception as e:
                    print("Error sending email:", str(e))
            # Set success message
            messages.success(request, "Emails have been sent successfully.")
            # Redirect back to change list view after sending emails
            return HttpResponseRedirect(request.get_full_path())
        else:
            print("Form is not valid:", form.errors)
    else:
        form = EmailForm()

    context = {
        'form': form,
        'title': 'Send email to selected students',
    }

    return TemplateResponse(request, 'admin/send_email_action.html', context)





def send_email_action_template(request, **kwargs):
    return admin.site.index(request, **kwargs)

class OnlineStudentsAdmin(admin.ModelAdmin):
    list_display = ('name','email','course_ordered', 'date_paid', 'date_completed', 'amount_paid')
    list_filter = ('date_paid', 'date_completed', 'order_status')
    search_fields = ('name', 'course_ordered', 'order_id', 'user_id')
    date_hierarchy = 'date_paid'
    actions = [send_email_action]

admin.site.register(OnlineStudents, OnlineStudentsAdmin)
admin.site.register(EmailTemplate)
















































# from django.contrib import admin
# from django.core.mail import send_mail
# from .models import OnlineStudents, EmailTemplate
# from django import forms
# from django.http import HttpResponseRedirect
# from django.urls import reverse
# from django.contrib import messages
# from django.template.response import TemplateResponse

# class EmailForm(forms.Form):
#     email_template = forms.ModelChoiceField(queryset=EmailTemplate.objects.all(), label='Email Template')

# def send_email_action(modeladmin, request, queryset):
#     if 'apply' in request.POST:
#         form = EmailForm(request.POST)
#         print("we will check if form is valid")
#         if form.is_valid():
#             print("print form is valid")
#             selected_students = queryset
#             email_template = form.cleaned_data['email_template']
#             selected_emails = selected_students.values_list('email', flat=True)
#             print("email List" + selected_emails)
#             # for email in selected_emails:
#                 # Send email using the selected template
#             send_mail(
#                 subject=email_template.subject,
#                 message=email_template.message,
#                 from_email='inmotion@dtechnologys.com',
#                 recipient_list=[selected_emails,],
#                 fail_silently=False,
#             )
#             print("email sent!")
#             # Set success message
#             messages.success(request, "Emails have been sent successfully.")

#             # Redirect back to change list view after sending emails
#             return HttpResponseRedirect(request.get_full_path())
#     else:
#         form = EmailForm()

#     context = {
#         'form': form,
#         'title': 'Send email to selected students',
#     }

#     return TemplateResponse(request, 'admin/send_email_action.html', context)

# # send_email_action.short_description = "Send email to selected students"

# def send_email_action_template(request, **kwargs):
#     return admin.site.index(request, **kwargs)


# class OnlineStudentsAdmin(admin.ModelAdmin):
#     list_display = ('name','email','course_ordered', 'date_paid', 'date_completed', 'amount_paid')
#     list_filter = ('date_paid', 'date_completed', 'order_status')
#     search_fields = ('name', 'course_ordered', 'order_id', 'user_id')
#     date_hierarchy = 'date_paid'
#     actions = [send_email_action]

# admin.site.register(OnlineStudents, OnlineStudentsAdmin)
# admin.site.register(EmailTemplate)
